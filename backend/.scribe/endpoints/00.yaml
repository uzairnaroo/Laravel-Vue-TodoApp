name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email."
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john.doe@example.com
      password: password123
      password_confirmation: password123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "access_token": "token123",
           "token_type": "Bearer",
           "user": {
               "id": 1,
               "name": "John Doe",
               "email": "john.doe@example.com"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email."
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john.doe@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "access_token": "token123",
           "token_type": "Bearer",
           "user": {
               "id": 1,
               "name": "John Doe",
               "email": "john.doe@example.com"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a list of tasks.'
      description: 'Get all tasks for the authenticated user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      is_completed:
        name: is_completed
        description: 'Filter by completed tasks.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'Filter by task priority.'
        required: false
        example: High
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search in task title.'
        required: false
        example: Task
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      is_completed: true
      priority: High
      search: Task
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
               {
                   "id": 1,
                   "title": "Example Task",
                   "description": "A task example",
                   "priority": "High",
                   "due_date": "2025-01-01",
                   "is_completed": false
               }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new task.'
      description: 'Create a new task for the authenticated user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task.'
        required: true
        example: 'New Task'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: true
        example: 'Task description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'The due date of the task (YYYY-MM-DD).'
        required: false
        example: '2025-01-23'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      priority:
        name: priority
        description: 'The priority of the task (Urgent, High, Normal, Low).'
        required: false
        example: High
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      tags:
        name: tags
        description: 'Must not be greater than 50 characters.'
        required: false
        example:
          - inqbb
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attachments:
        name: attachments
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'New Task'
      description: 'Task description'
      due_date: '2025-01-23'
      priority: High
      tags:
        - inqbb
    fileParameters:
      attachments:
        - null
    responses:
      -
        status: 201
        content: |-
          {
           "id": 1,
           "title": "New Task",
           "description": "Task description",
           "priority": "High",
           "due_date": "2025-01-23",
           "created_at": "2025-01-01 00:00:00"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific task.'
      description: 'Fetch the details of a specific task for the authenticated user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "title": "Example Task",
           "description": "Detailed task description",
           "priority": "High",
           "due_date": "2025-01-01",
           "is_completed": false,
           "created_at": "2025-01-01 00:00:00",
           "updated_at": "2025-01-01 00:00:00"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a task.'
      description: 'Update the specified task for the authenticated user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task.'
        required: false
        example: 'Updated Task'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: false
        example: 'Updated description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date. Must be a date after or equal to <code>today</code>.'
        required: false
        example: '2051-07-23'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'The priority of the task.'
        required: false
        example: Normal
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tags:
        name: tags
        description: 'Must not be greater than 50 characters.'
        required: false
        example:
          - ryrqmbsxhaqscjdvxysfxm
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      existing_attachments:
        name: existing_attachments
        description: 'The <code>id</code> of an existing record in the attachments table.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      attachments:
        name: attachments
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Updated Task'
      description: 'Updated description'
      due_date: '2051-07-23'
      priority: Normal
      tags:
        - ryrqmbsxhaqscjdvxysfxm
      existing_attachments:
        - 16
    fileParameters:
      attachments:
        - null
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "title": "Updated Task",
           "description": "Updated description",
           "priority": "Normal",
           "due_date": "2025-01-25",
           "updated_at": "2025-01-02 00:00:00"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a task.'
      description: 'Delete the specified task for the authenticated user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/tasks/{task}/complete'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark the task as completed.'
      description: 'Change the task status to completed.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task:
        name: task
        description: 'The task.'
        required: true
        example: cum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      task: cum
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "title": "Example Task",
           "is_completed": true,
           "completed_at": "2025-01-02 00:00:00"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/tasks/{task}/incomplete'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark the task as incomplete.'
      description: 'Change the task status to incomplete.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task:
        name: task
        description: 'The task.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      task: voluptatem
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "title": "Example Task",
           "is_completed": false,
           "completed_at": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/tasks/{task}/archive'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Archive the task.'
      description: 'Archive a specific task for the authenticated user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task:
        name: task
        description: 'The task.'
        required: true
        example: facilis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      task: facilis
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "title": "Example Task",
           "is_archived": true,
           "archived_at": "2025-01-02 00:00:00"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/tasks/{task}/restore'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore the archived task.'
      description: 'Restore an archived task for the authenticated user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task:
        name: task
        description: 'The task.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      task: quia
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "title": "Example Task",
           "is_archived": false,
           "archived_at": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
