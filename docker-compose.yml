services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    image: todo_backend
    container_name: backend
    restart: unless-stopped
    user: "${UID}:${GID}"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:r62lwM33H6wFO+DtitzeGWB/lcbkrear9YJwMwOKt0s=
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laraveluser
      - DB_PASSWORD=secret
      - FILESYSTEM_DISK=public
      - L5_SWAGGER_CONST_HOST=http://localhost:8085
    volumes:
      - ./backend:/var/www
      - storagedata:/var/www/storage
      - cachedata:/var/www/bootstrap/cache
    networks:
      - app-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: todo_frontend
    container_name: frontend
    restart: unless-stopped
    user: "1000:1000" 
    ports:
      - "8085:8085"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network



  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootsecret
      MYSQL_DATABASE: laravel
      MYSQL_USER: laraveluser
      MYSQL_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

volumes:
  dbdata:
  storagedata:
  cachedata:

networks:
  app-network:
    driver: bridge
